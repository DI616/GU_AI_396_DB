-- MySQL Script generated by MySQL Workbench
-- Пт 29 мая 2020 17:17:04
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema wikipedia
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `wikipedia` ;

-- -----------------------------------------------------
-- Schema wikipedia
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `wikipedia` DEFAULT CHARACTER SET utf8 ;
USE `wikipedia` ;

-- -----------------------------------------------------
-- Table `wikipedia`.`editors`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `wikipedia`.`editors` ;

CREATE TABLE IF NOT EXISTS `wikipedia`.`editors` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `is_registred` TINYINT(1) NOT NULL,
  `ip_addr` VARCHAR(45) NOT NULL,
  `created_at` DATETIME NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `wikipedia`.`editors` (`id` ASC);


-- -----------------------------------------------------
-- Table `wikipedia`.`articles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `wikipedia`.`articles` ;

CREATE TABLE IF NOT EXISTS `wikipedia`.`articles` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(128) NOT NULL,
  `created_by_editor_id` INT UNSIGNED NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_articles_users1`
    FOREIGN KEY (`created_by_editor_id`)
    REFERENCES `wikipedia`.`editors` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `wikipedia`.`articles` (`id` ASC);

CREATE INDEX `fk_articles_users1_idx` ON `wikipedia`.`articles` (`created_by_editor_id` ASC);


-- -----------------------------------------------------
-- Table `wikipedia`.`languages`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `wikipedia`.`languages` ;

CREATE TABLE IF NOT EXISTS `wikipedia`.`languages` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `wikipedia`.`languages` (`id` ASC);

CREATE UNIQUE INDEX `name_UNIQUE` ON `wikipedia`.`languages` (`name` ASC);


-- -----------------------------------------------------
-- Table `wikipedia`.`editings`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `wikipedia`.`editings` ;

CREATE TABLE IF NOT EXISTS `wikipedia`.`editings` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `language_id` INT UNSIGNED NOT NULL,
  `editor_id` INT UNSIGNED NOT NULL,
  `created_at` DATETIME NOT NULL,
  `is_confirmed` TINYINT(1) NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_editings_languages1`
    FOREIGN KEY (`language_id`)
    REFERENCES `wikipedia`.`languages` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_editings_users1`
    FOREIGN KEY (`editor_id`)
    REFERENCES `wikipedia`.`editors` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `wikipedia`.`editings` (`id` ASC);

CREATE INDEX `fk_editings_languages1_idx` ON `wikipedia`.`editings` (`language_id` ASC);

CREATE INDEX `fk_editings_users1_idx` ON `wikipedia`.`editings` (`editor_id` ASC);


-- -----------------------------------------------------
-- Table `wikipedia`.`current_bodies`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `wikipedia`.`current_bodies` ;

CREATE TABLE IF NOT EXISTS `wikipedia`.`current_bodies` (
  `article_id` INT UNSIGNED NOT NULL,
  `language_id` INT UNSIGNED NOT NULL,
  `editing_id` INT UNSIGNED NOT NULL,
  `body` VARCHAR(128) NOT NULL,
  PRIMARY KEY (`article_id`, `language_id`, `editing_id`),
  CONSTRAINT `fk_bodies_articles`
    FOREIGN KEY (`article_id`)
    REFERENCES `wikipedia`.`articles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_bodies_languages1`
    FOREIGN KEY (`language_id`)
    REFERENCES `wikipedia`.`languages` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_current_bodies_editings1`
    FOREIGN KEY (`editing_id`)
    REFERENCES `wikipedia`.`editings` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_bodies_languages1_idx` ON `wikipedia`.`current_bodies` (`language_id` ASC);

CREATE INDEX `fk_current_bodies_editings1_idx` ON `wikipedia`.`current_bodies` (`editing_id` ASC);

CREATE UNIQUE INDEX `editing_id_UNIQUE` ON `wikipedia`.`current_bodies` (`editing_id` ASC);


-- -----------------------------------------------------
-- Table `wikipedia`.`media_types`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `wikipedia`.`media_types` ;

CREATE TABLE IF NOT EXISTS `wikipedia`.`media_types` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `wikipedia`.`media_types` (`id` ASC);

CREATE UNIQUE INDEX `name_UNIQUE` ON `wikipedia`.`media_types` (`name` ASC);


-- -----------------------------------------------------
-- Table `wikipedia`.`media`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `wikipedia`.`media` ;

CREATE TABLE IF NOT EXISTS `wikipedia`.`media` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `filename` VARCHAR(45) NOT NULL,
  `media_type_id` INT UNSIGNED NOT NULL,
  `editor_id` INT UNSIGNED NOT NULL,
  `article_id` INT UNSIGNED NOT NULL,
  `created_at` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_media_media_types1`
    FOREIGN KEY (`media_type_id`)
    REFERENCES `wikipedia`.`media_types` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_media_editors1`
    FOREIGN KEY (`editor_id`)
    REFERENCES `wikipedia`.`editors` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_media_articles1`
    FOREIGN KEY (`article_id`)
    REFERENCES `wikipedia`.`articles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `wikipedia`.`media` (`id` ASC);

CREATE UNIQUE INDEX `filename_UNIQUE` ON `wikipedia`.`media` (`filename` ASC);

CREATE INDEX `fk_media_media_types1_idx` ON `wikipedia`.`media` (`media_type_id` ASC);

CREATE INDEX `fk_media_editors1_idx` ON `wikipedia`.`media` (`editor_id` ASC);

CREATE INDEX `fk_media_articles1_idx` ON `wikipedia`.`media` (`article_id` ASC);


-- -----------------------------------------------------
-- Table `wikipedia`.`archived_bodies`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `wikipedia`.`archived_bodies` ;

CREATE TABLE IF NOT EXISTS `wikipedia`.`archived_bodies` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `article_id` INT UNSIGNED NOT NULL,
  `language_id` INT UNSIGNED NOT NULL,
  `editing_id` INT UNSIGNED NOT NULL,
  `body` VARCHAR(128) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = ARCHIVE;


-- -----------------------------------------------------
-- Table `wikipedia`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `wikipedia`.`users` ;

CREATE TABLE IF NOT EXISTS `wikipedia`.`users` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `editor_id` INT UNSIGNED NULL,
  `name` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_users_editor1`
    FOREIGN KEY (`editor_id`)
    REFERENCES `wikipedia`.`editors` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `wikipedia`.`users` (`id` ASC);

CREATE UNIQUE INDEX `name_UNIQUE` ON `wikipedia`.`users` (`name` ASC);

CREATE INDEX `fk_users_editor1_idx` ON `wikipedia`.`users` (`editor_id` ASC);


-- -----------------------------------------------------
-- Table `wikipedia`.`categories`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `wikipedia`.`categories` ;

CREATE TABLE IF NOT EXISTS `wikipedia`.`categories` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `id_UNIQUE` ON `wikipedia`.`categories` (`id` ASC);

CREATE UNIQUE INDEX `name_UNIQUE` ON `wikipedia`.`categories` (`name` ASC);


-- -----------------------------------------------------
-- Table `wikipedia`.`categories_articles`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `wikipedia`.`categories_articles` ;

CREATE TABLE IF NOT EXISTS `wikipedia`.`categories_articles` (
  `category_id` INT UNSIGNED NOT NULL,
  `article_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`category_id`, `article_id`),
  CONSTRAINT `fk_categories_has_articles_categories1`
    FOREIGN KEY (`category_id`)
    REFERENCES `wikipedia`.`categories` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_categories_has_articles_articles1`
    FOREIGN KEY (`article_id`)
    REFERENCES `wikipedia`.`articles` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_categories_has_articles_articles1_idx` ON `wikipedia`.`categories_articles` (`article_id` ASC);

CREATE INDEX `fk_categories_has_articles_categories1_idx` ON `wikipedia`.`categories_articles` (`category_id` ASC);



SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
